(function() {
  var dataForImg, dataForList, dataForTable, dataForTableWide, graphDataWithLabels, simpleGraph;

  window.themes = [
    {
      file: 'light',
      name: 'Standard'
    }, {
      file: 'dark',
      name: 'Impact'
    }
  ];

  window.colors = [
    {
      name: 'Green',
      value: '#25AF6D'
    }, {
      name: 'Yellow',
      value: '#EFD756'
    }, {
      name: 'Red',
      value: '#E14C4C'
    }, {
      name: 'Magenta',
      value: '#DE268B'
    }, {
      name: 'Neutral',
      value: '#b3b3b3'
    }
  ];

  simpleGraph = {
    data: [
      {
        label: 'Design',
        d: 80
      }, {
        label: 'Development and Integration',
        d: 100
      }, {
        label: 'Testing',
        d: 50
      }
    ]
  };

  dataForImg = {
    data: void 0
  };

  dataForList = {
    labels: ['title', 'color', 'description'],
    data: [
      {
        title: 'Sample Text',
        color: colors[0],
        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry'
      }, {
        title: 'Sample Text',
        color: colors[1],
        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry'
      }, {
        title: 'Sample Text',
        color: colors[2],
        description: 'Lorem Ipsum is simply dummy text of the printing and typesetting industry'
      }
    ]
  };

  dataForTable = {
    labels: ['task name'],
    data: [
      {
        'task name': 'Presentation for upcoming meeting'
      }, {
        'task name': 'Collect user feedback'
      }, {
        'task name': 'Improvements towards release '
      }
    ]
  };

  dataForTableWide = {
    labels: ['New Features', 'Owner', 'Expected Rollout'],
    data: [
      {
        'New Features': 'Theme Change',
        'Expected Rollout': "Thursday",
        Owner: 'hari'
      }, {
        'New Features': 'Auto Save System',
        'Expected Rollout': "Monday",
        Owner: 'sunil'
      }, {
        'New Features': 'Versioning System',
        Owner: 'jacob',
        'Expected Rollout': 'Wednesday'
      }
    ]
  };

  graphDataWithLabels = {
    domain: {
      x: [0, 150]
    },
    labels: ['open', 'resolved', 'closed'],
    data: [
      {
        label: '27/9',
        open: 31,
        resolved: 10,
        closed: 32
      }, {
        label: '28/9',
        open: 32,
        resolved: 12,
        closed: 30
      }, {
        label: '29/9',
        open: 24,
        resolved: 19,
        closed: 32
      }, {
        label: '30/9',
        open: 26,
        resolved: 18,
        closed: 31
      }
    ]
  };

  window.builderWidgets = [];

  (function() {
    var customField, dataForTallWidget, formData, widget;
    widget = new WidgetBuilder('DoughNut', "1");
    widget.graphIcon = 'doughnut_icon.png';
    widget.className = "doughnut-editor";
    dataForTallWidget = angular.copy(simpleGraph);
    dataForTallWidget.data = [simpleGraph.data[0]];
    formData = [
      WidgetBuilderFormConstants.LABEL_FIELD, {
        type: "number",
        name: "d"
      }, {
        type: "text",
        name: "subtext",
        optional: true
      }, {
        type: "select",
        name: "color",
        src: colors,
        "default": colors[4]
      }
    ];
    customField = formData[1];
    customField.max = 100;
    customField.min = 0;
    widget.addSupport('tall', formData).setRowCount([1, 1]).setColumnCount(formData.length).setData(dataForTallWidget);
    widget.addSupport('sidebar', formData).setRowCount([3, 3]).setColumnCount(formData.length).setData(simpleGraph);
    widget.addSupport('wide', formData).setRowCount([3, 3]).setColumnCount(formData.length).setData(simpleGraph);
    return builderWidgets.push(widget);
  })();

  (function() {
    var widget;
    widget = new WidgetBuilder('Pie', "1");
    widget.graphIcon = 'pie_icon.png';
    widget.addSupport('tall', WidgetBuilderFormConstants.SIMPLE_FORM).setRowCount([2, 6]).setColumnCount(WidgetBuilderFormConstants.SIMPLE_FORM.length).setData(simpleGraph);
    return builderWidgets.push(widget);
  })();

  (function() {
    var customField, formData, widget;
    widget = new WidgetBuilder('Bar', "1");
    widget.graphIcon = 'bar_icon.png';
    formData = WidgetBuilderFormConstants.SIMPLE_FORM;
    customField = formData[1];
    customField.max = void 0;
    customField.min = 0;
    widget.addSupport('tall', WidgetBuilderFormConstants.SIMPLE_FORM).setRowCount([2, 4]).setColumnCount(WidgetBuilderFormConstants.SIMPLE_FORM.length).setData(simpleGraph);
    widget.addSupport('sidebar', WidgetBuilderFormConstants.SIMPLE_FORM).setRowCount([2, 6]).setColumnCount(WidgetBuilderFormConstants.SIMPLE_FORM.length).setData(simpleGraph);
    return builderWidgets.push(widget);
  })();

  (function() {
    var dataForTallWidget, widget;
    widget = new WidgetBuilder('Column', "1");
    widget.graphIcon = 'column_icon.png';
    dataForTallWidget = {
      data: [simpleGraph.data[0]]
    };
    widget.addSupport('tall', WidgetBuilderFormConstants.SIMPLE_FORM).setRowCount([2, 4]).setColumnCount(WidgetBuilderFormConstants.SIMPLE_FORM.length).setData(simpleGraph);
    widget.addSupport('wide', WidgetBuilderFormConstants.SIMPLE_FORM).setRowCount([2, 8]).setColumnCount(WidgetBuilderFormConstants.SIMPLE_FORM.length).setData(simpleGraph);
    return builderWidgets.push(widget);
  })();

  (function() {
    var widget;
    widget = new WidgetBuilder('Line', "2");
    widget.graphIcon = 'line_icon.png';
    widget.addSupport('tall', [WidgetBuilderFormConstants.LABEL_FIELD, WidgetBuilderFormConstants.CUSTOM_FIELD]).setRowCount([2, 4]).setColumnCount([2, 4]).setData(graphDataWithLabels);
    widget.addSupport('wide', [WidgetBuilderFormConstants.LABEL_FIELD, WidgetBuilderFormConstants.CUSTOM_FIELD]).setRowCount([2, 8]).setColumnCount([2, 4]).setData(graphDataWithLabels);
    return builderWidgets.push(widget);
  })();

  (function() {
    var formData, widget;
    widget = new WidgetBuilder('List', "5");
    widget.graphIcon = 'list_icon.png';
    formData = [
      {
        type: "text",
        name: "title"
      }, {
        type: "select",
        name: "color",
        src: colors,
        "default": colors[4]
      }, {
        type: "textarea",
        name: "description"
      }
    ];
    widget.addSupport('tall', formData).setRowCount([1, 3]).setColumnCount(3).setData(dataForList);
    widget.addSupport('sidebar', formData).setRowCount([1, 7]).setColumnCount(3).setData(dataForList);
    return builderWidgets.push(widget);
  })();

  (function() {
    var widget;
    widget = new WidgetBuilder('Area', "2");
    widget.graphIcon = 'area_icon.png';
    widget.addSupport('tall', [WidgetBuilderFormConstants.LABEL_FIELD, WidgetBuilderFormConstants.CUSTOM_FIELD]).setRowCount([1, 4]).setColumnCount([2, 4]).setData(graphDataWithLabels);
    widget.addSupport('wide', [WidgetBuilderFormConstants.LABEL_FIELD, WidgetBuilderFormConstants.CUSTOM_FIELD]).setRowCount([1, 6]).setColumnCount([2, 4]).setData(graphDataWithLabels);
    return builderWidgets.push(widget);
  })();

  (function() {
    var widget;
    widget = new WidgetBuilder('Stacked Column', "2");
    widget.graphIcon = 'stacked_icon.png';
    widget.addSupport('tall', [WidgetBuilderFormConstants.LABEL_FIELD, WidgetBuilderFormConstants.CUSTOM_FIELD]).setRowCount([1, 4]).setColumnCount([2, 4]).setData(graphDataWithLabels);
    widget.addSupport('wide', [WidgetBuilderFormConstants.LABEL_FIELD, WidgetBuilderFormConstants.CUSTOM_FIELD]).setRowCount([1, 8]).setColumnCount([2, 4]).setData(graphDataWithLabels);
    return builderWidgets.push(widget);
  })();

  (function() {
    var widget;
    widget = new WidgetBuilder('Table', "3");
    widget.graphIcon = 'table_icon.png';
    widget.addSupport('wide', [
      {
        type: "text",
        name: 'custom'
      }
    ]).setRowCount([1, 4]).setColumnCount([1, 6]).setData(dataForTableWide);
    widget.addSupport('sidebar', [
      {
        type: "text",
        name: 'custom'
      }
    ]).setRowCount([1, 12]).setColumnCount([1, 2]).setData(dataForTable);
    widget.addSupport('tall', [
      {
        type: "text",
        name: 'custom'
      }
    ]).setRowCount([1, 5]).setColumnCount([1, 2]).setData(dataForTable);
    return builderWidgets.push(widget);
  })();

  (function() {
    var widget;
    widget = new WidgetBuilder('Image', "4");
    widget.graphIcon = 'image_icon.png';
    widget.addSupport('tall', [
      {
        name: 'filename',
        type: 'file'
      }
    ]).setColumnCount(1).setRowCount(1).setData(dataForImg);
    return builderWidgets.push(widget);
  })();

}).call(this);

//# sourceMappingURL=data:application/json;base64,